/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.java.project.ui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Hemasreekoganti
 */
public class PatientClass extends javax.swing.JFrame {

     String connectionUrl = "jdbc:sqlserver://localhost:1433;databaseName=Hospital_Database;integratedSecurity=true;";
     Connection con=DriverManager.getConnection(connectionUrl); ; 
     Statement stmt = con.createStatement();
     PreparedStatement ps=null;
     int counter=1;
    /**
     * Creates new form PatientClass
     */
    public PatientClass() throws SQLException {
        this.con = DriverManager.getConnection(connectionUrl);
        initComponents();
        //chkbox_testrequired.setVisible(false);
        txt_testrequired.setVisible(false);
        lbl_testrequired.setVisible(false);
        groupButton();
        DefaultListModel DLM=new DefaultListModel();
        DLM.addElement("fname");
        DLM.addElement("lname");
        list_availablerooms.setModel(DLM);
        fillListBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox2 = new javax.swing.JCheckBox();
        buttonGroup1 = new javax.swing.ButtonGroup();
        lbl_pfname = new javax.swing.JLabel();
        lbl_lname = new javax.swing.JLabel();
        txt_pfname = new javax.swing.JTextField();
        txt_plname = new javax.swing.JTextField();
        lbl_proom = new javax.swing.JLabel();
        lbl_preason = new javax.swing.JLabel();
        cb_preason = new javax.swing.JComboBox();
        lbl_testrequired = new javax.swing.JLabel();
        lbl_docassigned = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_availablerooms = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        btn_create = new javax.swing.JButton();
        lbl_gender = new javax.swing.JLabel();
        rbtn_male = new javax.swing.JRadioButton();
        rbtn_female = new javax.swing.JRadioButton();
        lbl_age = new javax.swing.JLabel();
        txt_age = new javax.swing.JTextField();
        lbl_bloodgroup = new javax.swing.JLabel();
        txt_bloodgroup = new javax.swing.JTextField();
        lbl_hno = new javax.swing.JLabel();
        lbl_city = new javax.swing.JLabel();
        lbl_state = new javax.swing.JLabel();
        lbl_country = new javax.swing.JLabel();
        lbl_phone = new javax.swing.JLabel();
        txt_hno = new javax.swing.JTextField();
        txt_city = new javax.swing.JTextField();
        txt_state = new javax.swing.JTextField();
        txt_country = new javax.swing.JTextField();
        txt_phone = new javax.swing.JTextField();
        txt_testrequired = new javax.swing.JTextField();
        cbox_doctor = new javax.swing.JComboBox();

        jCheckBox2.setText("jCheckBox2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_pfname.setText("First Name:");

        lbl_lname.setText("Last Name :");

        txt_pfname.setText("    ");

        lbl_proom.setText("Patient Room :");

        lbl_preason.setText("Reason :");

        cb_preason.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "General", "Cardiology", "Allergy", "Radiology", "Kidney Problem", "Breathing Problem", " ", " ", " " }));
        cb_preason.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_preasonActionPerformed(evt);
            }
        });

        lbl_testrequired.setText("Test Required :");

        lbl_docassigned.setText("Doctor Assigned :");

        list_availablerooms.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(list_availablerooms);

        jLabel1.setText("          IN PATIENT FORM");

        btn_create.setText("Create Patient");
        btn_create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_createActionPerformed(evt);
            }
        });

        lbl_gender.setText("Gender :");

        rbtn_male.setText("Male");

        rbtn_female.setText("Female");

        lbl_age.setText("Age :");

        lbl_bloodgroup.setText("Blood Group :");

        lbl_hno.setText("HNO :");

        lbl_city.setText("City :");

        lbl_state.setText("State :");

        lbl_country.setText("Country :");

        lbl_phone.setText("Phone :");

        txt_city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cityActionPerformed(evt);
            }
        });

        cbox_doctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_doctorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_pfname)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                    .addComponent(txt_pfname)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_lname)
                                    .addComponent(lbl_gender)
                                    .addComponent(lbl_age))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_plname, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rbtn_male)
                                            .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rbtn_female)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lbl_preason)
                                                    .addComponent(lbl_bloodgroup))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(18, 18, 18)
                                                        .addComponent(txt_bloodgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(9, 9, 9)
                                                        .addComponent(cb_preason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbl_proom)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_testrequired)
                        .addGap(18, 18, 18)
                        .addComponent(txt_testrequired, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(btn_create))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_docassigned)
                            .addComponent(lbl_hno)
                            .addComponent(lbl_city)
                            .addComponent(lbl_state)
                            .addComponent(lbl_country)
                            .addComponent(lbl_phone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_phone, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(txt_country)
                            .addComponent(txt_state)
                            .addComponent(txt_hno)
                            .addComponent(txt_city)
                            .addComponent(cbox_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_pfname)
                    .addComponent(txt_pfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_lname)
                    .addComponent(txt_plname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_gender)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbtn_male)
                        .addComponent(rbtn_female)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_age)
                    .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_bloodgroup)
                    .addComponent(txt_bloodgroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_proom)
                        .addGap(121, 121, 121)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_docassigned)
                            .addComponent(cbox_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_preason)
                            .addComponent(cb_preason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_testrequired)
                            .addComponent(txt_testrequired, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_hno)
                    .addComponent(txt_hno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_city)
                    .addComponent(txt_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_state)
                    .addComponent(txt_state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_country)
                    .addComponent(txt_country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_phone)
                    .addComponent(txt_phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_create)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_createActionPerformed
        // TODO add your handling code here:
        String roomid=(String) list_availablerooms.getSelectedValue();
        System.out.println(roomid);
        String fname=txt_pfname.getText();
        //String mname=txt_mname.getText();
        String reason= (String)cb_preason.getSelectedItem();
        PreparedStatement p=null,pselect=null,pinsert=null;
        String SQL1,SQL2,SQL3;
        String sel="SELECT max(pid) as pid from patient";
       // String doc="SELECT "
        
         SQL1 = "UPDATE room SET isroomavailable=1 WHERE rid=?";
         //SQL3="SELECT empid from employees where lname=?";
        String lname=txt_plname.getText();
        String hno=txt_hno.getText();
        String city=txt_city.getText();
        String state=txt_state.getText();
        String country=txt_country.getText();
        String bloodgroup=txt_bloodgroup.getText();
        String phone=txt_phone.getText();
        String age=txt_age.getText();
        String gender="";
        if(rbtn_male.isSelected())
         gender=rbtn_male.getText();
        if(rbtn_female.isSelected())
         gender=rbtn_female.getText();
        String doc_id= (String)cbox_doctor.getSelectedItem();
         SQL2="INSERT INTO patient values(?,?,?,?,?,?,?,?,?,?,?,?)";
        
         try {
              ps = con.prepareStatement(SQL1);
              ps.setString(1, roomid);
              ps.executeUpdate();   
              pselect =con.prepareStatement(sel);
              ResultSet result=pselect.executeQuery();
              while(result.next())
                {
                    System.out.println( result.getString("pid"));
                    counter=Integer.parseInt(result.getString("pid")) + 1;
                    System.out.println(counter);
                }
        pinsert=con.prepareStatement(SQL2);
        pinsert.setInt(1,counter);
        pinsert.setString(2, fname);
        pinsert.setString(3, lname);
        pinsert.setString(4, gender);
        pinsert.setString(5, age);
        pinsert.setString(6, bloodgroup);
        pinsert.setString(7, doc_id);
        pinsert.setString(8, hno);
        pinsert.setString(9, country);
        pinsert.setString(10, city);
        pinsert.setString(11, state);
        pinsert.setString(12, phone);
        pinsert.executeUpdate();
         } 
         catch (SQLException ex) {
             Logger.getLogger(PatientClass.class.getName()).log(Level.SEVERE, null, ex);
         }
        
         JOptionPane.showMessageDialog(null,"CREATED RECORD SUCCESSFULLY");
         HomePage home=new HomePage();
         home.setVisible(true);
    }//GEN-LAST:event_btn_createActionPerformed

    private void FillCombo()
    {
        // lbl_testrequired.setVisible(true);
        //txt_testrequired.setVisible(true);
        String reason=(String)cb_preason.getSelectedItem();
        //Connection con = DriverManager.getConnection(connectionUrl); 
        //Statement stmt = con.createStatement();
        PreparedStatement ps=null;
        String SQL1;
         SQL1 = "select e.deptid,e.empid,d.dname,e.fname,e.lname from dbo.Employees e inner join dbo.Department d on d.deptid=e.deptid where d.dname=?"; 
                 //"SELECT fname,lname FROM employees WHERE dname=?";
         try {
             ps = con.prepareStatement(SQL1);
             ps.setString(1, reason);
             ResultSet rs = ps.executeQuery();
             while (rs.next()) 
             {
              System.out.println( rs.getString("fname"));
              String fullname=rs.getString("fname")+" "+rs.getString("lname");
              cbox_doctor.addItem(fullname);
              //System.out.println(tname);
             }
         } 
         catch (SQLException ex) {
             Logger.getLogger(PatientClass.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }
    private void txt_cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cityActionPerformed

    private void cb_preasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_preasonActionPerformed
        // TODO add your handling code here:
        lbl_testrequired.setVisible(true);
        txt_testrequired.setVisible(true);
        String reason=(String)cb_preason.getSelectedItem();
        //Connection con = DriverManager.getConnection(connectionUrl); 
        //Statement stmt = con.createStatement();
        PreparedStatement ps=null;
        String SQL1;
         SQL1 = "SELECT tname FROM test WHERE testcause=?";
         try {
             ps = con.prepareStatement(SQL1);
             ps.setString(1, reason);
             ResultSet rs = ps.executeQuery();
             while (rs.next()) 
             {
              System.out.println( rs.getString("tname"));
              txt_testrequired.setText(rs.getString("tname"));
              //System.out.println(tname);
             }
         } 
         catch (SQLException ex) {
             Logger.getLogger(PatientClass.class.getName()).log(Level.SEVERE, null, ex);
         }
         FillCombo();
        
        //chkbox_testrequired.setVisible(true);
    }//GEN-LAST:event_cb_preasonActionPerformed

    private void cbox_doctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_doctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbox_doctorActionPerformed
   
     private void groupButton( )
    {
        ButtonGroup bg1 = new ButtonGroup( );
        bg1.add(rbtn_female);
        bg1.add(rbtn_male);
        bg1.clearSelection();
    }
    private void fillListBox()
    {
       DefaultListModel m=new DefaultListModel();
       try{
           String sql="select rid from room where isroomavailable=?";
           ps=con.prepareStatement(sql);
           ps.setInt(1,1);
           ResultSet rs=ps.executeQuery();
           while(rs.next())
           {
               String id=rs.getString("rid");
               System.out.println(id);
               m.addElement(id);
           }
           list_availablerooms.setModel(m);
       }catch(Exception e)
       {
           //aJOptionpane.showMessageDialog(null,e);
       }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PatientClass().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(PatientClass.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_create;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cb_preason;
    private javax.swing.JComboBox cbox_doctor;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_age;
    private javax.swing.JLabel lbl_bloodgroup;
    private javax.swing.JLabel lbl_city;
    private javax.swing.JLabel lbl_country;
    private javax.swing.JLabel lbl_docassigned;
    private javax.swing.JLabel lbl_gender;
    private javax.swing.JLabel lbl_hno;
    private javax.swing.JLabel lbl_lname;
    private javax.swing.JLabel lbl_pfname;
    private javax.swing.JLabel lbl_phone;
    private javax.swing.JLabel lbl_preason;
    private javax.swing.JLabel lbl_proom;
    private javax.swing.JLabel lbl_state;
    private javax.swing.JLabel lbl_testrequired;
    private javax.swing.JList list_availablerooms;
    private javax.swing.JRadioButton rbtn_female;
    private javax.swing.JRadioButton rbtn_male;
    private javax.swing.JTextField txt_age;
    private javax.swing.JTextField txt_bloodgroup;
    private javax.swing.JTextField txt_city;
    private javax.swing.JTextField txt_country;
    private javax.swing.JTextField txt_hno;
    private javax.swing.JTextField txt_pfname;
    private javax.swing.JTextField txt_phone;
    private javax.swing.JTextField txt_plname;
    private javax.swing.JTextField txt_state;
    private javax.swing.JTextField txt_testrequired;
    // End of variables declaration//GEN-END:variables
}
